{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        // eslint-disable-next-line no-console\n        this.initialState = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n        this.state = this.initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n        this.score = 0;\n        this.status = Game.STATUS_IDLE;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status !== Game.STATUS_PLAYING) return;\n                var stateChanged = false;\n                for(var row = 0; row < 4; row++){\n                    var newRow = this.slideAndMerge(this.state[row]);\n                    if (newRow.toString() !== this.state[row].toString()) stateChanged = true;\n                    this.state[row] = newRow;\n                }\n                if (stateChanged) this.spawnTile();\n                this.checkLose();\n                this.checkWin();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.state = this.state.map(function(row) {\n                    return row.reverse();\n                });\n                this.moveLeft();\n                this.state = this.state.map(function(row) {\n                    return row.reverse();\n                });\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.transpose();\n                this.moveLeft();\n                this.transpose();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.transpose();\n                this.moveRight();\n                this.transpose();\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.status = Game.STATUS_PLAYING;\n                this.spawnTile();\n                this.spawnTile();\n                this.checkWin();\n                this.checkLose();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                this.score = 0;\n                this.status = Game.STATUS_IDLE;\n            }\n        },\n        {\n            // Add your own methods here\n            key: \"spawnTile\",\n            value: function spawnTile() {\n                var emptyTiles = [];\n                for(var row = 0; row < 4; row++){\n                    for(var column = 0; column < 4; column++)if (this.state[row][column] === 0) emptyTiles.push({\n                        row: row,\n                        column: column\n                    });\n                }\n                if (emptyTiles.length > 0) {\n                    var _emptyTiles_Math_floor = emptyTiles[Math.floor(Math.random() * emptyTiles.length)], row1 = _emptyTiles_Math_floor.row, column1 = _emptyTiles_Math_floor.column;\n                    this.state[row1][column1] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"transpose\",\n            value: function transpose() {\n                var transposedGrid = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                for(var row = 0; row < 4; row++)for(var column = 0; column < 4; column++)transposedGrid[column][row] = this.state[row][column];\n                this.state = transposedGrid;\n            }\n        },\n        {\n            key: \"slideAndMerge\",\n            value: function slideAndMerge(row) {\n                var filteredRows = row.filter(function(element) {\n                    return element !== 0;\n                });\n                for(var i = 0; i < filteredRows.length - 1; i++)if (filteredRows[i] === filteredRows[i + 1]) {\n                    filteredRows[i] *= 2;\n                    this.score += filteredRows[i];\n                    filteredRows[i + 1] = 0;\n                }\n                filteredRows = filteredRows.filter(function(element) {\n                    return element !== 0;\n                });\n                while(filteredRows.length !== 4)filteredRows.push(0);\n                return filteredRows;\n            }\n        },\n        {\n            key: \"checkWin\",\n            value: function checkWin() {\n                for(var row = 0; row < 4; row++){\n                    for(var column = 0; column < 4; column++)if (this.state[row][column] === Game.WINNING_TILE) this.status = Game.STATUS_WIN;\n                }\n            }\n        },\n        {\n            key: \"checkLose\",\n            value: function checkLose() {\n                for(var row = 0; row < 4; row++)for(var column = 0; column < 4; column++){\n                    if (this.state[row][column] === 0) return;\n                }\n                for(var row1 = 0; row1 < 4; row1++)for(var column1 = 0; column1 < 4; column1++){\n                    if (row1 < 3 && this.state[row1][column1] === this.state[row1 + 1][column1] || column1 < 3 && this.state[row1][column1] === this.state[row1][column1 + 1]) return;\n                }\n                this.status = Game.STATUS_LOSE;\n            }\n        }\n    ]);\n    return Game;\n}();\n/**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */ (0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"STATUS_IDLE\", \"idle\");\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"STATUS_PLAYING\", \"playing\");\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"STATUS_WIN\", \"win\");\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"STATUS_LOSE\", \"lose\");\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"WINNING_TILE\", 2048);\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\n// Write your code here\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$isGameStarted = false;\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function(e) {\n    var clickedButton = e.target;\n    if (!clickedButton) return;\n    $197cd56b15c33885$var$isGameStarted = !$197cd56b15c33885$var$isGameStarted;\n    if ($197cd56b15c33885$var$isGameStarted) $197cd56b15c33885$var$startGame(clickedButton);\n    else $197cd56b15c33885$var$restartGame(clickedButton);\n    $197cd56b15c33885$var$updateGrid($197cd56b15c33885$var$game.getState());\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if (!$197cd56b15c33885$var$isGameStarted) return;\n    e.preventDefault();\n    switch(e.key){\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n    }\n    $197cd56b15c33885$var$updateMessage();\n    $197cd56b15c33885$var$updateGrid($197cd56b15c33885$var$game.getState());\n});\nfunction $197cd56b15c33885$var$startGame(button) {\n    $197cd56b15c33885$var$updateButtonState(\"Retart\", \"start\", \"restart\");\n    $197cd56b15c33885$var$updateMessage();\n    $197cd56b15c33885$var$game.start();\n}\nfunction $197cd56b15c33885$var$restartGame(button) {\n    $197cd56b15c33885$var$updateButtonState(\"Start\", \"restart\", \"start\");\n    $197cd56b15c33885$var$updateMessage(\"start\");\n    $197cd56b15c33885$var$game.restart();\n}\nfunction $197cd56b15c33885$var$updateButtonState(text, removeClass, addClass) {\n    $197cd56b15c33885$var$startButton.classList.replace(removeClass, addClass);\n    $197cd56b15c33885$var$startButton.textContent = text;\n}\nfunction $197cd56b15c33885$var$updateMessage() {\n    var type = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;\n    document.querySelectorAll(\".message\").forEach(function(message) {\n        message.classList.toggle(\"hidden\", true);\n    });\n    var messageStatus;\n    if (type) messageStatus = document.querySelector(\".message-\".concat(type));\n    else messageStatus = document.querySelector(\".message-\".concat($197cd56b15c33885$var$game.getStatus()));\n    if (messageStatus) messageStatus.classList.toggle(\"hidden\", false);\n}\nfunction $197cd56b15c33885$var$updateGrid(newGrid) {\n    var grid = document.querySelectorAll(\".field-row\");\n    var score = document.querySelector(\".game-score\");\n    score.textContent = $197cd56b15c33885$var$game.getScore();\n    for(var row = 0; row < 4; row++)for(var column = 0; column < 4; column++){\n        var cell = grid[row].children[column];\n        if (newGrid[row][column] !== 0) {\n            cell.textContent = newGrid[row][column];\n            cell.className = cell.className.replace(/field-cell--\\d+/g, \"\");\n            cell.classList.add(\"field-cell--\".concat(newGrid[row][column]));\n        } else {\n            cell.textContent = \"\";\n            cell.className = cell.className.replace(/field-cell--\\d+/g, \"\");\n            cell.className = \"field-cell\";\n        }\n    }\n}\n\n})();\n//# sourceMappingURL=index.dca28d03.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class.js');\nconst game = new Game();\n\n// Write your code here\nconst startButton = document.querySelector('.start');\nlet isGameStarted = false;\n\nstartButton.addEventListener('click', (e) => {\n  const clickedButton = e.target;\n\n  if (!clickedButton) {\n    return;\n  }\n\n  isGameStarted = !isGameStarted;\n\n  if (isGameStarted) {\n    startGame(clickedButton);\n  } else {\n    restartGame(clickedButton);\n  }\n\n  updateGrid(game.getState());\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (!isGameStarted) {\n    return;\n  }\n  e.preventDefault();\n\n  switch (e.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n  }\n\n  updateMessage();\n  updateGrid(game.getState());\n});\n\nfunction startGame(button) {\n  updateButtonState('Retart', 'start', 'restart');\n  updateMessage();\n\n  game.start();\n}\n\nfunction restartGame(button) {\n  updateButtonState('Start', 'restart', 'start');\n  updateMessage('start');\n\n  game.restart();\n}\n\nfunction updateButtonState(text, removeClass, addClass) {\n  startButton.classList.replace(removeClass, addClass);\n  startButton.textContent = text;\n}\n\nfunction updateMessage(type = null) {\n  document.querySelectorAll('.message').forEach((message) => {\n    message.classList.toggle('hidden', true);\n  });\n\n  let messageStatus;\n\n  if (type) {\n    messageStatus = document.querySelector(`.message-${type}`);\n  } else {\n    messageStatus = document.querySelector(`.message-${game.getStatus()}`);\n  }\n\n  if (messageStatus) {\n    messageStatus.classList.toggle('hidden', false);\n  }\n}\n\nfunction updateGrid(newGrid) {\n  const grid = document.querySelectorAll('.field-row');\n  const score = document.querySelector('.game-score');\n\n  score.textContent = game.getScore();\n\n  for (let row = 0; row < 4; row++) {\n    for (let column = 0; column < 4; column++) {\n      const cell = grid[row].children[column];\n\n      if (newGrid[row][column] !== 0) {\n        cell.textContent = newGrid[row][column];\n\n        cell.className = cell.className.replace(/field-cell--\\d+/g, '');\n\n        cell.classList.add(`field-cell--${newGrid[row][column]}`);\n      } else {\n        cell.textContent = '';\n\n        cell.className = cell.className.replace(/field-cell--\\d+/g, '');\n\n        cell.className = 'field-cell';\n      }\n    }\n  }\n}\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  static STATUS_IDLE = 'idle';\n  static STATUS_PLAYING = 'playing';\n  static STATUS_WIN = 'win';\n  static STATUS_LOSE = 'lose';\n  static WINNING_TILE = 2048;\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    // eslint-disable-next-line no-console\n    this.initialState = initialState.map((row) => [...row]);\n    this.state = this.initialState.map((row) => [...row]);\n    this.score = 0;\n    this.status = Game.STATUS_IDLE;\n  }\n\n  moveLeft() {\n    if (this.status !== Game.STATUS_PLAYING) {\n      return;\n    }\n\n    let stateChanged = false;\n\n    for (let row = 0; row < 4; row++) {\n      const newRow = this.slideAndMerge(this.state[row]);\n\n      if (newRow.toString() !== this.state[row].toString()) {\n        stateChanged = true;\n      }\n\n      this.state[row] = newRow;\n    }\n\n    if (stateChanged) {\n      this.spawnTile();\n    }\n\n    this.checkLose();\n    this.checkWin();\n  }\n  moveRight() {\n    this.state = this.state.map((row) => row.reverse());\n    this.moveLeft();\n    this.state = this.state.map((row) => row.reverse());\n  }\n  moveUp() {\n    this.transpose();\n    this.moveLeft();\n    this.transpose();\n  }\n  moveDown() {\n    this.transpose();\n    this.moveRight();\n    this.transpose();\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state.map((row) => [...row]);\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.status = Game.STATUS_PLAYING;\n\n    this.spawnTile();\n    this.spawnTile();\n\n    this.checkWin();\n    this.checkLose();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.state = this.initialState.map((row) => [...row]);\n    this.score = 0;\n    this.status = Game.STATUS_IDLE;\n  }\n\n  // Add your own methods here\n  spawnTile() {\n    const emptyTiles = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let column = 0; column < 4; column++) {\n        if (this.state[row][column] === 0) {\n          emptyTiles.push({ row, column });\n        }\n      }\n    }\n\n    if (emptyTiles.length > 0) {\n      const { row, column } =\n        emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n\n      this.state[row][column] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  transpose() {\n    const transposedGrid = this.initialState.map((row) => [...row]);\n\n    for (let row = 0; row < 4; row++) {\n      for (let column = 0; column < 4; column++) {\n        transposedGrid[column][row] = this.state[row][column];\n      }\n    }\n\n    this.state = transposedGrid;\n  }\n\n  slideAndMerge(row) {\n    let filteredRows = row.filter((element) => element !== 0);\n\n    for (let i = 0; i < filteredRows.length - 1; i++) {\n      if (filteredRows[i] === filteredRows[i + 1]) {\n        filteredRows[i] *= 2;\n        this.score += filteredRows[i];\n        filteredRows[i + 1] = 0;\n      }\n    }\n\n    filteredRows = filteredRows.filter((element) => element !== 0);\n\n    while (filteredRows.length !== 4) {\n      filteredRows.push(0);\n    }\n\n    return filteredRows;\n  }\n\n  checkWin() {\n    for (let row = 0; row < 4; row++) {\n      for (let column = 0; column < 4; column++) {\n        if (this.state[row][column] === Game.WINNING_TILE) {\n          this.status = Game.STATUS_WIN;\n        }\n      }\n    }\n  }\n\n  checkLose() {\n    for (let row = 0; row < 4; row++) {\n      for (let column = 0; column < 4; column++) {\n        if (this.state[row][column] === 0) {\n          return;\n        }\n      }\n    }\n\n    for (let row = 0; row < 4; row++) {\n      for (let column = 0; column < 4; column++) {\n        if (\n          (row < 3 &&\n            this.state[row][column] === this.state[row + 1][column]) ||\n          (column < 3 &&\n            this.state[row][column] === this.state[row][column + 1])\n        ) {\n          return;\n        }\n      }\n    }\n\n    this.status = Game.STATUS_LOSE;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$cd5a47cf8ef6d766$export$71511d61b312f219","obj","key","value","Object","defineProperty","enumerable","configurable","writable","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","instance","Constructor","map","row","state","score","status","STATUS_IDLE","STATUS_PLAYING","stateChanged","newRow","slideAndMerge","spawnTile","checkLose","checkWin","reverse","moveLeft","transpose","moveRight","emptyTiles","column","push","_emptyTiles_Math_floor","Math","floor","random","row1","column1","transposedGrid","filteredRows","filter","element","WINNING_TILE","STATUS_WIN","STATUS_LOSE","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","$197cd56b15c33885$var$game","$197cd56b15c33885$var$startButton","document","querySelector","$197cd56b15c33885$var$isGameStarted","$197cd56b15c33885$var$updateButtonState","text","removeClass","addClass","classList","replace","textContent","$197cd56b15c33885$var$updateMessage","messageStatus","type","querySelectorAll","forEach","message","toggle","concat","getStatus","$197cd56b15c33885$var$updateGrid","newGrid","grid","getScore","cell","children","className","add","addEventListener","e","start","restart","getState","preventDefault","moveUp","moveDown"],"version":3,"file":"index.dca28d03.js.map"}